/* TODO: Example 07 (Activity 8) CSS goes here */

@function calc-font-size($num){
    @if unitless($num)
    {
        @return 3 - ($num - 1)* .3;
    }

    @else{
        @warn "invalid argument. Must be unitless";
        @return 0;
    }
}

@function calc-header-color($num, $color1, $color2){
    @return mix($color1, $color2, $num*15%);
}

/*returns the function*/
//@for $num from 1 through 6{
//    h#{$num}{
//        font-size: calc-font-size($num)*1rem;
//        color: calc-header-color($num, white, black);
//    }
//} 

$num: 1;
@while $num <=6{
    h#{$num}{
        font-size: calc-font-size($num)*1rem;
        color: calc-header-color($num, white, black);
    }

$num: $num + 1;
}


$header-list: huge xlarge large medium small tiny;

%header{
    font-weight: bolder;
    margin: .5em;

    @at-root a#{&}{
        text-decoration: none;
    }
}

/*applying it to a different section in website EXTEND*/
@each $hdr in $header-list{
    .header.#{$hdr}{
        @extend %header;
        @extend h#{index($header-list, $hdr)};
    }
}

@mixin foo-styles{
    color: white;
    padding: 5px;
    margin: auto;
}

.foo{
    @include foo-styles;
}

.bar{
    @extend .foo;
}

.button .interior .small-icon{
    width: 10px;
}

.side{
    .top, 
    .middle,
    .bottom{
        .sign-in,
        .register{
            @extend .small-icon;
        }
    }
}

@import "global";
@import "button";

.new{
    @extend .button, .primary;
}

.edit{
    @extend .button, .secondary;
}

.approve{
    @extend .button, .success;
}

.deny{
    @extend .button, .error;
}

.warn{
    @extend .button, .warning;
}













